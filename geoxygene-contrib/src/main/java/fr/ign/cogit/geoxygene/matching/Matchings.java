//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, vJAXB 2.1.3 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2013.06.25 at 02:52:10 PM CEST
//

package fr.ign.cogit.geoxygene.matching;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for Matchings complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Matchings">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Matching" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="Pattern" maxOccurs="unbounded" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;sequence>
 *                               &lt;choice>
 *                                 &lt;element name="in" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
 *                                 &lt;element name="out" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
 *                               &lt;/choice>
 *                             &lt;/sequence>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlRootElement
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Matchings", propOrder = { "matching" })
public class Matchings {

  @XmlElement(name = "matching")
  protected List<Matchings.Matching> matching;

  /**
   * Gets the value of the matching property.
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any
   * modification you make to the returned list will be present inside the JAXB object. This is why
   * there is not a <CODE>set</CODE> method for the matching property.
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
   * getMatching().add(newItem);
   * </pre>
   * <p>
   * Objects of the following type(s) are allowed in the list {@link Matchings.Matching }
   */
  public List<Matchings.Matching> getMatching() {
    if (matching == null) {
      matching = new ArrayList<Matchings.Matching>();
    }
    return this.matching;
  }

  /**
   * <p>
   * Java class for anonymous complex type.
   * <p>
   * The following schema fragment specifies the expected content contained within this class.
   * 
   * <pre>
   * &lt;complexType>
   *   &lt;complexContent>
   *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
   *       &lt;sequence>
   *         &lt;element name="Pattern" maxOccurs="unbounded" minOccurs="0">
   *           &lt;complexType>
   *             &lt;complexContent>
   *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
   *                 &lt;sequence>
   *                   &lt;sequence>
   *                     &lt;choice>
   *                       &lt;element name="in" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
   *                       &lt;element name="out" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
   *                     &lt;/choice>
   *                   &lt;/sequence>
   *                 &lt;/sequence>
   *               &lt;/restriction>
   *             &lt;/complexContent>
   *           &lt;/complexType>
   *         &lt;/element>
   *       &lt;/sequence>
   *     &lt;/restriction>
   *   &lt;/complexContent>
   * &lt;/complexType>
   * </pre>
   */
  @XmlAccessorType(XmlAccessType.FIELD)
  @XmlType(name = "", propOrder = { "pattern" })
  public static class Matching {

    @XmlElement(name = "pattern")
    protected List<Matchings.Matching.Pattern> pattern;

    /**
     * Gets the value of the pattern property.
     * <p>
     * This accessor method returns a reference to the live list, not a snapshot. Therefore any
     * modification you make to the returned list will be present inside the JAXB object. This is
     * why there is not a <CODE>set</CODE> method for the pattern property.
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getPattern().add(newItem);
     * </pre>
     * <p>
     * Objects of the following type(s) are allowed in the list {@link Matchings.Matching.Pattern }
     */
    public List<Matchings.Matching.Pattern> getPattern() {
      if (pattern == null) {
        pattern = new ArrayList<Matchings.Matching.Pattern>();
      }
      return this.pattern;
    }

    /**
     * <p>
     * Java class for anonymous complex type.
     * <p>
     * The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;sequence>
     *           &lt;choice>
     *             &lt;element name="in" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
     *             &lt;element name="out" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
     *           &lt;/choice>
     *         &lt;/sequence>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = { "in", "out" })
    public static class Pattern {

      protected List<String> in;
      protected List<String> out;

      /**
       * Gets the value of the in property.
       * <p>
       * This accessor method returns a reference to the live list, not a snapshot. Therefore any
       * modification you make to the returned list will be present inside the JAXB object. This is
       * why there is not a <CODE>set</CODE> method for the in property.
       * <p>
       * For example, to add a new item, do as follows:
       * 
       * <pre>
       * getIn().add(newItem);
       * </pre>
       * <p>
       * Objects of the following type(s) are allowed in the list {@link String }
       */
      public List<String> getIn() {
        if (in == null) {
          in = new ArrayList<String>();
        }
        return this.in;
      }

      /**
       * Gets the value of the out property.
       * <p>
       * This accessor method returns a reference to the live list, not a snapshot. Therefore any
       * modification you make to the returned list will be present inside the JAXB object. This is
       * why there is not a <CODE>set</CODE> method for the out property.
       * <p>
       * For example, to add a new item, do as follows:
       * 
       * <pre>
       * getOut().add(newItem);
       * </pre>
       * <p>
       * Objects of the following type(s) are allowed in the list {@link String }
       */
      public List<String> getOut() {
        if (out == null) {
          out = new ArrayList<String>();
        }
        return this.out;
      }

    }

  }

  public static Matchings unmarshall(String file) {
    try {
      JAXBContext context = JAXBContext.newInstance(Matchings.class);
      Unmarshaller m = context.createUnmarshaller();
      Matchings root = (Matchings) m.unmarshal(new File(file));
      return root;
    } catch (JAXBException e1) {
      e1.printStackTrace();
    }
    return null;
  }

  public void marshall(String file) {
    try {
      JAXBContext context = JAXBContext.newInstance(Matchings.class);
      Marshaller m = context.createMarshaller();
      m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
      m.marshal(this, new File(file));
    } catch (JAXBException e1) {
      e1.printStackTrace();
    }
  }

}
