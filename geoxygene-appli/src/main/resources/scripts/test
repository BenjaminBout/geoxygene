def cut( primitive, strokeSize, strokeGap ) {
  CutterOperator cutter = new CutterOperator(strokeSize, strokeGap );
  cutter.addInput(primitive);
  cutter.apply();
}

def cut( primitive, strokeSize ) {
  CutterOperator cutter = new CutterOperator(strokeSize, 0 );
  cutter.addInput(primitive);
  cutter.apply();
}



def rotate( primitive, angle ) {
  RotateOperator rotator = new RotateOperator( angle );
  rotator.addInput( primitive );
  rotator.apply();
}

// take all points of a primitive and draw lines between them

def lineRendering( primitive, thickness, color ) {
  glLineWidth( thickness ); 
  glColor3f( color.getRed()/255, color.getGreen()/255, color.getBlue()/255 );
  glBegin(GL_LINE_STRIP);
  for ( int n = 0; n < primitive.getPointCount(); n++) {
    Point2d p2 = primitive.getPoint(n);
    glVertex2d(p2.x, p2.y);
  }
  glEnd();
}

def lineRendering( primitive ) {
  lineRendering( primitive, 1 , Color.black );
}

// take all points of a primitive and draw lines between them


def pointRendering( primitive, exThickness, exColor, inThickness, inColor ) {
  glPointSize( exThickness ); 
  glColor3f( exColor.getRed()/255, exColor.getGreen()/255, exColor.getBlue()/255 );
  glBegin(GL_POINTS);
  Point2d e1 = primitive.getPoint(0);
  glVertex2d(e1.x, e1.y);
  Point2d e2 = primitive.getPoint(primitive.getPointCount()-1);
  glVertex2d(e2.x, e2.y);
  glEnd();


  glPointSize( inThickness ); 
  glColor3f( inColor.getRed()/255, inColor.getGreen()/255, inColor.getBlue()/255 );
  glBegin(GL_POINTS);
  for ( int n = 1; n < primitive.getPointCount()-1; n++) {
    Point2d p2 = primitive.getPoint(n);
    glVertex2d(p2.x, p2.y);
  }
  glEnd();
}


def pointRendering( primitive, thickness, color ) {
  glPointSize( thickness ); 
  glColor3f( color.getRed()/255, color.getGreen()/255, color.getBlue()/255 );
  glBegin(GL_POINTS);
  for ( int n = 0; n < primitive.getPointCount(); n++) {
    Point2d p2 = primitive.getPoint(n);
    glVertex2d(p2.x, p2.y);
  }
  glEnd();
}

def pointRendering( primitive ) {
  lineRendering( primitive, 2 , Color.black );
}



def stroke( geom, strokeSize, angle ) {
  rotate( cut( geom, strokeSize, 0 ), angle )
}

strokeSize = 5 * viewport.getScale()

for ( DrawingPrimitive primitive : primitives ) {
  pointRendering( stroke(primitive, strokeSize, PI/4 ), 3, Color.red, 1, Color.black )
}
